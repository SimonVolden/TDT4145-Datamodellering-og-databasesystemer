package SQL;

/**
 * Class representing the SQL Database table FollowupDiscussion.
 * Contains a PostID that the discussion is a part of,
 * A sequenceNumber that is the number of the FollowupDiscussion.
 * A followupDiscussion is identified by a combinations of PostID and sequenceNumber
 * A UserID, the ID of the poster
 * Anonumous, if the user wants to be anonymous or not
 * The Likes of the post.
 * Also contains the content, that is the discussion
 * 
 * Also has its own SQLConnector @see SQLConnector
 */
public class FollowupDiscussion {
    int postID, sequenceNumber, anonymous, userID, likes;
    String content;
    SQLConnector connector = new SQLConnector();

    /**
     * Initialize a FollowupDiscussion with the provided parameters.
     * The sequenceNumber is generated by the next available ID from the database.
     * 
     * @param postID
     * @param userID
     * @param content
     * @param anonymous
     * @param likes
     */
    public FollowupDiscussion(int postID, int userID, String content, boolean anonymous, int likes) {
        this.postID = postID;
        this.sequenceNumber = this.connector.getNextSequenceNumber(postID);
        this.userID = userID;
        this.content = content;
        if (anonymous) {
            this.anonymous = 1;
        } else {
            this.anonymous = 0;
        }
        this.likes = likes;
    }

    /**
     * Initialize a FollowupDiscussion with the provided parameters.
     * 
     * @param postID
     * @param userID
     * @param content
     * @param anonymous
     * @param likes
     */
    public FollowupDiscussion(int postID, int sequenceNumber, int userID, String content, boolean anonymous, int likes) {
        this.postID = postID;
        this.sequenceNumber = sequenceNumber;
        this.userID = userID;
        this.content = content;
        if (anonymous) {
            this.anonymous = 1;
        } else {
            this.anonymous = 0;
        }
        this.likes = likes;
    }

    /**
     * returns the content of the Followupdiscussion
     * @return content
     */
    public String getContent() {
        return this.content;
    }

    /**
     * returns the userID of the poster
     * @return UserID
     */
    public int getUserID() {
        return this.userID;
    }

    /**
     * returns if the user wants to be anonymous or not
     * @return anonymous
     */
    public boolean getAnonymous() {
        if (this.anonymous == 1) {
            return true;
        }
        return false;
    }

    
    /** 
     * @return a String that is an insertStatement of the class variables.
    */
    public String getValues() {
        return "INSERT INTO FollowupDiscussion (PostID, SequenceNumber, UserID, content, Anonymous, Likes) "
                + "VALUES ('" + this.postID + "', '" + this.sequenceNumber + "', '" + this.userID + "', '"
                + this.content + "', '" + this.anonymous + "', '" + this.likes + "') ";
    }

    /** 
     * @return printabel String
     */
    public String toString() {
        return "PostID: " + this.postID + " SequenceNumber: " + this.sequenceNumber + " UserID: " + this.userID
                + " Content: " + this.content + " Anonymous: " + this.anonymous + " Likes: " + this.likes;
    }
    
     /**
     * uses the SQLConnector to insert the class into the database.
     */
    public void insert() {
        this.connector.insert(this.getValues());
    }

    public static void main(String[] args) {
        FollowupDiscussion fd = new FollowupDiscussion(1, 3,  1, "Diskuter: ", false, 0);
        System.out.println(fd.connector.getNextSequenceNumber(1));
        fd.insert();
        System.out.println(fd.toString());
    }
}
