package SQL;


/**
 * Class representing the SQL Database table Tags
 * This Contains the TagID and the Tag on string form.
 * Tags can be used to mark posts.
 * 
 * Also has its own SQLConnector @see SQLConnector
 */
public class Tags {
    int tagID;
    String tag;
    SQLConnector connector = new SQLConnector();

    /**
     * Initialize a Tags object with the provided string tag.
     * TagID is generated by the SQLConnector method getNextID
     * 
     * @param tag
     */
    public Tags(String tag) {
        this.tagID = connector.getNextID("TagID", "Tags");
        this.tag = tag;
    }

    /**
     *  Initialize a Tags object with the provided tagID and tag string.
     * @param tagID
     * @param tag
     */
    public Tags(int tagID, String tag) {
        this.tagID = tagID;
        this.tag = tag;
    }

    /**
     * returns the tagID
     * @return tagID
     */
    public int getTagID() {
        return this.tagID;
    }

    /**
     * returns the string tag
     * @return tag
     */
    public String getTag() {
        return this.tag;
    }

    /** 
     * @return a String that is an insertStatement of the class variables.
    */
    public String getValues() {
        return " INSERT INTO Tags (TagID, Tag) Values ('" +
        this.tagID + "', '" + this.tag + "')";
    }

    /** 
     * @return printabel String
     */
    public String toString(){
        return "TagID: " + this.tagID + " Tag: " + this.tag;
    }
    
    /**
    * uses the SQLConnector to insert the class into the database.
    */
    public void insert() {
        this.connector.insert(this.getValues());
    }

    
    public static void main(String[] args) {
        Tags tag = new Tags("Logistikk");
        tag.insert();
        Tags tag1 = new Tags("Midterm");
        tag1.insert();
        Tags tag2 = new Tags("Forelesninger");
        tag2.insert();
        Tags tag3 = new Tags("Treningsoppgaver");
        tag3.insert();

        //System.out.println(tag.toString());
    }
}
